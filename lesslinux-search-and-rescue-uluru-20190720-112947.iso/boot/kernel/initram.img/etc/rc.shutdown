#!/static/bin/ash
		
PATH=/static/bin:/static/sbin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin
export PATH

# set this to prevent faults if not set in /etc/rc.defaults
ultraquiet=0

. /etc/rc.defaults
. /etc/rc.subr/extractbootparams
. /etc/rc.subr/colors
. /etc/rc.lang/en/messages.sh
[ -f "/etc/rc.lang/$lang/messages.sh" ] && . /etc/rc.lang/$lang/messages.sh
. /etc/lesslinux/branding/branding.en.sh
[ -f "/etc/lesslinux/branding/branding.${lang}.sh" ] && . /etc/lesslinux/branding/branding.${lang}.sh
. /etc/rc.subr/progressbar

[ "$console" = tty2 ] && chvt 2 
[ "$ultraquiet" -gt 1 ] && chvt 1 
[ "$ultraquiet" -eq 3 ] && fbset && chvt 8 

# define some common functions

free_loop() {
    for i in /dev/loop[0-9]* ; do
	losetup -d "$i" > /dev/null 2>&1
    done
}

# Progressbar for shutdown 

showpgbar() {
	fraction=$1
	total=$2
	serv=$3
	termdims=` /static/bin/stty -F /dev/tty1 size ` 
	cols=` echo $termdims | awk '{print $2}' `
	rows=` echo $termdims | awk '{print $1}' `
	[ -z "$cols" -o "$cols" = 0 ] && cols=80
	[ -z "$rows" -o "$rows" = 0 ] && rows=24
	# Move cursor to top left - clear screen
	printf '\33[2J' > /dev/tty1
	# Move cursor down
	sline=` expr  '(' $rows -  2 ')' / 2 ` 
	scol=` expr '(' $cols - $total ')' / 2 ` 
	# Print Start text
	printf '\33[0m' > /dev/tty1
	printf '\33['$sline';'$scol'H'"${bold}${brandlong}${normal}" > /dev/tty1 
	printf '\33['` expr $sline + 1 `';'$scol'H' > /dev/tty1
	# Set color 
	printf '\33[0;7m' > /dev/tty1
	for n in ` seq 1 $fraction ` ; do printf ' ' > /dev/tty1 ; done
	# Inverse color for blocks
	printf '\33['$pgcolor'm' > /dev/tty1
	for n in ` seq $fraction $total ` ;  do printf ' ' > /dev/tty1 ; done
	printf '\33[0m' > /dev/tty1
	[ -n "$serv" ] && printf '\33['` expr $sline + 2 `';'$scol'H'"Stopping ${serv}${normal}" > /dev/tty1 
	# Move cursor out of way, clean up
	printf '\33['` expr $rows - 1 `';0H' > /dev/tty1
	printf '\33[0m' > /dev/tty1
}

# Graphical progressbar for shutdown

showsplash() {
    fraction=$1
    total=$2
    serv=$3
    if [ '!' -p /splash.fifo ] ; then
	if fbset ; then
		# disable the cursor
		# echo -n -e '\e[?17;14;224c' > /dev/tty1
		echo -n -e '\e[?25l' > /dev/tty8
		# create a fifo
		mkfifo /splash.fifo
		# Write config
		fbwidth=` fbset | grep '^mode' | awk -F '["x-]' '{print $2}' `
		fbheight=` fbset | grep '^mode' | awk -F '["x-]' '{print $3}' `
		/etc/rc.subr/write_fbsplash_config $fbwidth $fbheight 
		bgfile=/etc/lesslinux/branding/fbsplash/splash.ppm
		[ -f /etc/lesslinux/branding/fbsplash/shutdown.ppm ] && bgfile=/etc/lesslinux/branding/fbsplash/shutdown.ppm
		fbsplash -i /etc/lesslinux/fbsplash.cfg -s $bgfile -f /splash.fifo &
	fi
    fi
     if [ -p /splash.fifo ] ; then
	expr ${fraction}00 / ${total} > /splash.fifo
	if [ -f /etc/lesslinux/fbsplash_icon.cfg -a -f  /etc/lesslinux/branding/fbsplash/i_${serv}.ppm ] ; then
		fbsplash -i /etc/lesslinux/fbsplash_icon.cfg -s /etc/lesslinux/branding/fbsplash/i_${serv}.ppm 
	elif [ -f /etc/lesslinux/fbsplash_icon.cfg -a -f  /etc/lesslinux/branding/fbsplash/i_gears.ppm ] ; then
		fbsplash -i /etc/lesslinux/fbsplash_icon.cfg -s /etc/lesslinux/branding/fbsplash/i_gears.ppm 
	fi
    fi 
}

####
scriptcount=0 
scripttotal=` ls /etc/rc.d/[0-9][0-9][0-9][0-9]-*.?? | wc -l ` 
[ "$console" = tty2 -a "$ultraquiet" -eq 2 ] && showpgbar 0 $scripttotal 

# Clear the terminal with empty newlines
for i in ` seq 50 ` ; do
	echo ""
	echo "" > /dev/tty1
done

if ls /dev/mapper/lesslinux_crypt > /dev/null 2>&1 ; then
    [ "$ultraquiet" -gt 0 ] || printf "$bold---> Saving some settings $normal\n" 
    cat /etc/lesslinux/overlay_save | while read filename
	do
	    case $filename in
		'#'*|'')
		    true
		;;
		*)
		    test -f "$filename" && tar -C / -cf - "$filename" 2>/dev/null | tar -C /home/.overlay -xf - 2>/dev/null
		;;
	    esac
	done
fi

printf "${bold}${stop_remaining}${normal}\n"
[ "$ultraquiet" -gt 1 ] && clearscreen
[ "$ultraquiet" -eq 2 ] && centertext 34 1 "${stop_remaining}"

[ "$ultraquiet" -gt 0 ] || printf "$bold---> Running rc scripts in reverse order $normal\n" 

for i in ` ls /etc/rc.d/[0-9][0-9][0-9][0-9]-*.?? | tac `
do
    provides="` cat $i | grep '#lesslinux provides' | awk '{print $3}' `"
    if [ -z "$provides" ] ; then
        [ "$ultraquiet" -gt 0 ] && $i stop > /dev/null 2>&1
	[ "$ultraquiet" -gt 0 ] || $i stop
    else
        if echo "$skipservices" | grep '|'$provides'|' > /dev/null 2>&1 ; then 
	    [ "$ultraquiet" -gt 0 ] || printf "$bold---> Skipping $provides \n" 
        else
	    [ "$ultraquiet" -eq 2 ] && showpgbar $scriptcount $scripttotal $provides
	    [ "$ultraquiet" -eq 3 ] && showsplash $scriptcount $scripttotal $provides
	    [ "$ultraquiet" -gt 0 ] && $i stop > /dev/null 2>&1
	    [ "$ultraquiet" -gt 0 ] || $i stop
        fi
    fi
    scriptcount=` expr $scriptcount + 1 `
done

[ "$ultraquiet" -eq 2 ] && chvt 1

# first find and unmount all fuseblk devices
fuseblks=` cat /proc/mounts | grep ' fuseblk ' | awk '{print $2}' ` 
for i in 1 2 3 ; do
    for j in $fuseblks ; do
	# We have to use explicitely umount from the "real" coreutils
	# since busybox' umount does not understand how to unmount
	# fuseblk- or bind-mounts
	/bin/umount "$j"
	free_loop
    done
done

# finding and closing cryptdevices
if [ -d "/dev/mapper" ] ; then 
    for i in 1 2 3 4 5 6 ; do
	for j in /dev/mapper/* ; do
		if [ "$j" '!=' "/dev/mapper/control" ] ; then
			mountpoint=` mount | grep $j | awk '{print $3}' `
			[ "$i" -lt 4 ] && mountpoint -q "$mountpoint" && fuser -km "$mountpoint" > /dev/null 2>&1
			[ "$i" -gt 3 ] && mountpoint -q "$mountpoint" && fuser -km -9 "$mountpoint" > /dev/null 2>&1
			umount "$j" > /dev/null 2>&1
			cryptsetup luksClose "$j" > /dev/null 2>&1
		fi
	done
    done
fi

# Free some loop devices not used anymore
free_loop

# After freeing loop devices we might do one round of unmounting
mntpnts=` mount | grep '^/' | awk '{print $3}' `
for i in $mntpnts ; do
    umount $i > /dev/null 2>&1
done

# Free some loop devices not used anymore
free_loop

boot_device=` cat /var/run/lesslinux/install_source `

# Now forcibly kill all processes residing in mountpoints of our loop devices
# remember to unmount subdirectories!
lomntpnts=` mount | grep '^/dev/loop' | awk '{print $3}'` 
for i in $lomntpnts ; do
	mntsubdirs=` mount | awk '{print $3}' | grep '^'$i | sort -r `
	for j in $mntsubdirs ; do
		umount $j > /dev/null 2>&1
		mountpoint -q $j && fuser -km -9 $j > /dev/null 2>&1
		umount $j > /dev/null 2>&1
	done
done

# Free some loop devices not used anymore
free_loop

# Now get weird, seven rounds of killing and umounting everything
for n in 0 1 2 3 4 5 6 ; do
    mntpnts=` mount | grep -E '^/|^tmpfs' | awk '{print $3}' ` 
    for i in $mntpnts ; do
	mntsubdirs=` mount | awk '{print $3}' | grep '^'$i | sort -r `
	for j in $mntsubdirs ; do
	    mountpoint -q $j && fuser -km -9 $j > /dev/null 2>&1
	    umount $j > /dev/null 2>&1
	    umount_retval="$?"
	    if [ "$j" = "/lesslinux/cdrom" ] ; then
		cat /proc/cmdline /etc/lesslinux/cmdline /lesslinux/boot/cmdline | grep -q noeject || [ -f /var/run/lesslinux/shutdown_requested_reboot ] || ( [ "$umount_retval" -lt 1 ] && eject -s "$boot_device" ) 
	    fi
	done
	free_loop
	sleep 1 
    done
done

[ "$ultraquiet" -gt 0 ] || printf "$bold---> Still mounted $normal \n"
[ "$ultraquiet" -gt 0 ] || cat /proc/mounts

# debug
# sleep 60

for i in ` seq 60 ` ; do
    [ "$ultraquiet" -gt 0 ] && printf "\n"
done

if grep -q 'bootdevice=/dev/sr' /var/run/lesslinux/startup_vars ; then
	shutdown_seconds=10
	if grep -q 'toram=true' /var/run/lesslinux/startup_vars ; then
	    shutdown_seconds=0
	fi
else
	shutdown_seconds=0
fi
if [ -f /var/run/lesslinux/shutdown_seconds ] ; then
	shutdown_seconds=` cat /var/run/lesslinux/shutdown_seconds ` 
fi
if [ -f /var/run/lesslinux/shutdown_requested_reboot ] ; then
	shutdown_seconds=0
fi

[ "$ultraquiet" -gt 1 ] && chvt 1
# [ "$ultraquiet" -eq 3 ] && fbset && chvt 8 
shutdown_msg=` echo $shut_down_in | sed 's/COUNT/'$shutdown_seconds'/g' ` 
printf "\n${bold}${shutdown_msg}${normal}\n\n"
[ "$ultraquiet" -gt 1 ] && clearscreen tty1
[ "$ultraquiet" -gt 1 ] && centertext 34 1 "${shutdown_msg}" tty1
sleep $shutdown_seconds
printf "\n${bold}${shut_down_now}${normal}\n\n"
[ "$ultraquiet" -gt 1 ] && clearscreen tty1
[ "$ultraquiet" -gt 1 ] && centertext 34 1 "${shut_down_now}" tty1 

# THE END		
